{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lasit\\\\OneDrive\\\\Documents\\\\IDEs\\\\VS Code\\\\Paff-Yummly-App\\\\frontend\\\\src\\\\components\\\\GroupDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport GroupService from '../services/GroupService';\nimport GroupMessages from './GroupMessages';\nimport GroupNav from './GroupNav';\nimport { useUser } from '../pages/UserContext';\nimport Swal from 'sweetalert2';\nimport '../styles/GroupDetail.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faExchangeAlt, faUserPlus, faSignOutAlt, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupDetail = () => {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useUser();\n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState({\n    isMember: false,\n    isModerator: false,\n    isAdmin: false\n  });\n  const [activeTab, setActiveTab] = useState('about');\n\n  // Get current user ID from context\n  const currentUserId = user ? user.id : null;\n  useEffect(() => {\n    // Redirect to login if not authenticated\n    if (!user) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Authentication Required',\n        text: 'You need to log in to view group details',\n        confirmButtonText: 'Go to Login'\n      }).then(() => {\n        navigate('/');\n      });\n      return;\n    }\n\n    // Get the requested tab from URL hash, if any\n    const hash = window.location.hash.substring(1);\n    if (hash === 'messages') {\n      setActiveTab('messages');\n    }\n    loadGroupData();\n  }, [groupId, currentUserId, user, navigate]);\n  const loadGroupData = async () => {\n    setLoading(true);\n    try {\n      // Load group details\n      const groupResponse = await GroupService.getGroupById(groupId);\n      setGroup(groupResponse.data);\n\n      // Load members\n      const membersResponse = await GroupService.getGroupMembers(groupId);\n      setMembers(membersResponse.data);\n\n      // Load moderators\n      const moderatorsResponse = await GroupService.getGroupModerators(groupId);\n      setModerators(moderatorsResponse.data);\n\n      // Check user roles\n      const [isMemberRes, isModeratorRes, isAdminRes] = await Promise.all([GroupService.isMember(groupId, currentUserId), GroupService.isModerator(groupId, currentUserId), GroupService.isAdmin(groupId, currentUserId)]);\n      setUserRole({\n        isMember: isMemberRes.data,\n        isModerator: isModeratorRes.data,\n        isAdmin: isAdminRes.data\n      });\n      setError(null);\n    } catch (err) {\n      setError('Failed to load group details. Please try again later.');\n      console.error('Error loading group details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleJoinGroup = async () => {\n    try {\n      await GroupService.joinGroup(groupId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Joined Successfully',\n        text: 'You are now a member of this group'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Join',\n        text: 'There was an error joining the group'\n      });\n      console.error('Error joining group:', err);\n    }\n  };\n  const handleLeaveGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Leave Group?',\n        text: 'Are you sure you want to leave this group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Leave',\n        cancelButtonText: 'Cancel'\n      });\n      if (result.isConfirmed) {\n        await GroupService.leaveGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Left Successfully',\n          text: 'You have left the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Leave',\n        text: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'There was an error leaving the group'\n      });\n      console.error('Error leaving group:', err);\n    }\n  };\n  const handleDeleteGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Delete Group?',\n        text: 'This action cannot be undone. All group data will be permanently deleted.',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Delete',\n        cancelButtonText: 'Cancel',\n        confirmButtonColor: '#d33'\n      });\n      if (result.isConfirmed) {\n        await GroupService.deleteGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Group Deleted',\n          text: 'The group has been successfully deleted'\n        });\n        navigate('/groups'); // Redirect to groups list\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Delete',\n        text: 'There was an error deleting the group'\n      });\n      console.error('Error deleting group:', err);\n    }\n  };\n  const handleAddModerator = async userId => {\n    try {\n      await GroupService.addModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Added',\n        text: 'The user is now a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Add Moderator',\n        text: 'There was an error adding the moderator'\n      });\n      console.error('Error adding moderator:', err);\n    }\n  };\n  const handleRemoveModerator = async userId => {\n    try {\n      await GroupService.removeModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Removed',\n        text: 'The user is no longer a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Moderator',\n        text: 'There was an error removing the moderator'\n      });\n      console.error('Error removing moderator:', err);\n    }\n  };\n  const handleTransferOwnership = async () => {\n    try {\n      const {\n        value: newAdminId\n      } = await Swal.fire({\n        title: 'Transfer Ownership',\n        input: 'select',\n        inputOptions: Object.fromEntries(members.filter(member => member.id !== currentUserId).map(member => [member.id, member.name])),\n        inputPlaceholder: 'Select a new admin',\n        showCancelButton: true\n      });\n      if (newAdminId) {\n        await GroupService.transferOwnership(groupId, Number(newAdminId), currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Ownership Transferred',\n          text: 'Group ownership has been transferred successfully'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Transfer Ownership',\n        text: 'There was an error transferring ownership'\n      });\n      console.error('Error transferring ownership:', err);\n    }\n  };\n  const handleRemoveMember = async userId => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Remove Member?',\n        text: 'Are you sure you want to remove this member from the group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Remove',\n        cancelButtonText: 'Cancel'\n      });\n      if (result.isConfirmed) {\n        await GroupService.removeMember(groupId, userId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Member Removed',\n          text: 'The member has been removed from the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Member',\n        text: 'There was an error removing the member'\n      });\n      console.error('Error removing member:', err);\n    }\n  };\n  const switchTab = tab => {\n    setActiveTab(tab);\n    window.location.hash = tab;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading group details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 12\n    }, this);\n  }\n  if (!group) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Group not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 12\n    }, this);\n  }\n  const isModerator = userId => moderators.some(moderator => moderator.id === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(GroupNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: group.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cuisine-type\",\n          children: [\"Cuisine: \", group.cuisineType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-actions\",\n        children: [!userRole.isMember && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"join-btn\",\n          onClick: handleJoinGroup,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUserPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), \" Join Group\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), userRole.isMember && !userRole.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"leave-btn\",\n          onClick: handleLeaveGroup,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSignOutAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), \" Leave Group\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), userRole.isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-btn\",\n            onClick: () => navigate(`/groups/${groupId}/edit`),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPenToSquare\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"transfer-btn\",\n            onClick: handleTransferOwnership,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faExchangeAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), \" Transfer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: handleDeleteGroup,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `group-tab ${activeTab === 'about' ? 'active' : ''}`,\n        onClick: () => switchTab('about'),\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), userRole.isMember && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `group-tab ${activeTab === 'messages' ? 'active' : ''}`,\n        onClick: () => switchTab('messages'),\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), activeTab === 'about' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"About this Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-members\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Members (\", members.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"members-list\",\n          children: members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"member-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"member-name\",\n              children: [member.name, group.adminId === member.id && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"admin-badge\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 53\n              }, this), isModerator(member.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"moderator-badge\",\n                children: \"Moderator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this), (userRole.isAdmin || userRole.isModerator && !isModerator(member.id) && group.adminId !== member.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"member-actions\",\n              children: [group.adminId !== member.id && member.id !== currentUserId && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-member-btn\",\n                onClick: () => handleRemoveMember(member.id),\n                title: \"Remove member\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 25\n              }, this), userRole.isAdmin && member.id !== currentUserId && (isModerator(member.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"toggle-mod-btn\",\n                onClick: () => handleRemoveModerator(member.id),\n                title: \"Remove moderator role\",\n                children: \"Remove Mod\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"toggle-mod-btn\",\n                onClick: () => handleAddModerator(member.id),\n                title: \"Add moderator role\",\n                children: \"Make Mod\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 27\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 21\n            }, this)]\n          }, member.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 'messages' && userRole.isMember && /*#__PURE__*/_jsxDEV(GroupMessages, {\n      groupId: groupId,\n      userRole: userRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetail, \"v7oTTh4frHMzJkK6KCoFxBatk98=\", false, function () {\n  return [useParams, useNavigate, useUser];\n});\n_c = GroupDetail;\nexport default GroupDetail;\nvar _c;\n$RefreshReg$(_c, \"GroupDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","GroupService","GroupMessages","GroupNav","useUser","Swal","FontAwesomeIcon","faEdit","faTrashAlt","faExchangeAlt","faUserPlus","faSignOutAlt","faPenToSquare","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupDetail","_s","groupId","navigate","user","group","setGroup","members","setMembers","moderators","setModerators","loading","setLoading","error","setError","userRole","setUserRole","isMember","isModerator","isAdmin","activeTab","setActiveTab","currentUserId","id","fire","icon","title","text","confirmButtonText","then","hash","window","location","substring","loadGroupData","groupResponse","getGroupById","data","membersResponse","getGroupMembers","moderatorsResponse","getGroupModerators","isMemberRes","isModeratorRes","isAdminRes","Promise","all","err","console","handleJoinGroup","joinGroup","handleLeaveGroup","result","showCancelButton","cancelButtonText","isConfirmed","leaveGroup","_err$response","_err$response$data","response","message","handleDeleteGroup","confirmButtonColor","deleteGroup","handleAddModerator","userId","addModerator","handleRemoveModerator","removeModerator","handleTransferOwnership","value","newAdminId","input","inputOptions","Object","fromEntries","filter","member","map","name","inputPlaceholder","transferOwnership","Number","handleRemoveMember","removeMember","switchTab","tab","className","children","fileName","_jsxFileName","lineNumber","columnNumber","some","moderator","cuisineType","onClick","description","length","adminId","_c","$RefreshReg$"],"sources":["C:/Users/lasit/OneDrive/Documents/IDEs/VS Code/Paff-Yummly-App/frontend/src/components/GroupDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport GroupService from '../services/GroupService';\nimport GroupMessages from './GroupMessages';\nimport GroupNav from './GroupNav';\nimport { useUser } from '../pages/UserContext';\nimport Swal from 'sweetalert2';\nimport '../styles/GroupDetail.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt, faExchangeAlt, faUserPlus, faSignOutAlt, faPenToSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst GroupDetail = () => {\n  const { groupId } = useParams();\n  const navigate = useNavigate();\n  const { user } = useUser();\n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState({\n    isMember: false,\n    isModerator: false,\n    isAdmin: false\n  });\n  const [activeTab, setActiveTab] = useState('about');\n  \n  // Get current user ID from context\n  const currentUserId = user ? user.id : null;\n\n  useEffect(() => {\n    // Redirect to login if not authenticated\n    if (!user) {\n      Swal.fire({\n        icon: 'warning',\n        title: 'Authentication Required',\n        text: 'You need to log in to view group details',\n        confirmButtonText: 'Go to Login'\n      }).then(() => {\n        navigate('/');\n      });\n      return;\n    }\n    \n    // Get the requested tab from URL hash, if any\n    const hash = window.location.hash.substring(1);\n    if (hash === 'messages') {\n      setActiveTab('messages');\n    }\n    \n    loadGroupData();\n  }, [groupId, currentUserId, user, navigate]);\n\n  const loadGroupData = async () => {\n    setLoading(true);\n    try {\n      // Load group details\n      const groupResponse = await GroupService.getGroupById(groupId);\n      setGroup(groupResponse.data);\n      \n      // Load members\n      const membersResponse = await GroupService.getGroupMembers(groupId);\n      setMembers(membersResponse.data);\n      \n      // Load moderators\n      const moderatorsResponse = await GroupService.getGroupModerators(groupId);\n      setModerators(moderatorsResponse.data);\n      \n      // Check user roles\n      const [isMemberRes, isModeratorRes, isAdminRes] = await Promise.all([\n        GroupService.isMember(groupId, currentUserId),\n        GroupService.isModerator(groupId, currentUserId),\n        GroupService.isAdmin(groupId, currentUserId)\n      ]);\n      \n      setUserRole({\n        isMember: isMemberRes.data,\n        isModerator: isModeratorRes.data,\n        isAdmin: isAdminRes.data\n      });\n      \n      setError(null);\n    } catch (err) {\n      setError('Failed to load group details. Please try again later.');\n      console.error('Error loading group details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleJoinGroup = async () => {\n    try {\n      await GroupService.joinGroup(groupId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Joined Successfully',\n        text: 'You are now a member of this group'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Join',\n        text: 'There was an error joining the group'\n      });\n      console.error('Error joining group:', err);\n    }\n  };\n\n  const handleLeaveGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Leave Group?',\n        text: 'Are you sure you want to leave this group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Leave',\n        cancelButtonText: 'Cancel'\n      });\n      \n      if (result.isConfirmed) {\n        await GroupService.leaveGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Left Successfully',\n          text: 'You have left the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Leave',\n        text: err.response?.data?.message || 'There was an error leaving the group'\n      });\n      console.error('Error leaving group:', err);\n    }\n  };\n\n  const handleDeleteGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Delete Group?',\n        text: 'This action cannot be undone. All group data will be permanently deleted.',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Delete',\n        cancelButtonText: 'Cancel',\n        confirmButtonColor: '#d33'\n      });\n      \n      if (result.isConfirmed) {\n        await GroupService.deleteGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Group Deleted',\n          text: 'The group has been successfully deleted'\n        });\n        navigate('/groups'); // Redirect to groups list\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Delete',\n        text: 'There was an error deleting the group'\n      });\n      console.error('Error deleting group:', err);\n    }\n  };\n\n  const handleAddModerator = async (userId) => {\n    try {\n      await GroupService.addModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Added',\n        text: 'The user is now a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Add Moderator',\n        text: 'There was an error adding the moderator'\n      });\n      console.error('Error adding moderator:', err);\n    }\n  };\n\n  const handleRemoveModerator = async (userId) => {\n    try {\n      await GroupService.removeModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Removed',\n        text: 'The user is no longer a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Moderator',\n        text: 'There was an error removing the moderator'\n      });\n      console.error('Error removing moderator:', err);\n    }\n  };\n\n  const handleTransferOwnership = async () => {\n    try {\n      const { value: newAdminId } = await Swal.fire({\n        title: 'Transfer Ownership',\n        input: 'select',\n        inputOptions: Object.fromEntries(\n          members\n            .filter(member => member.id !== currentUserId)\n            .map(member => [member.id, member.name])\n        ),\n        inputPlaceholder: 'Select a new admin',\n        showCancelButton: true\n      });\n      \n      if (newAdminId) {\n        await GroupService.transferOwnership(groupId, Number(newAdminId), currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Ownership Transferred',\n          text: 'Group ownership has been transferred successfully'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Transfer Ownership',\n        text: 'There was an error transferring ownership'\n      });\n      console.error('Error transferring ownership:', err);\n    }\n  };\n\n  const handleRemoveMember = async (userId) => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Remove Member?',\n        text: 'Are you sure you want to remove this member from the group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Remove',\n        cancelButtonText: 'Cancel'\n      });\n      \n      if (result.isConfirmed) {\n        await GroupService.removeMember(groupId, userId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Member Removed',\n          text: 'The member has been removed from the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Member',\n        text: 'There was an error removing the member'\n      });\n      console.error('Error removing member:', err);\n    }\n  };\n\n  const switchTab = (tab) => {\n    setActiveTab(tab);\n    window.location.hash = tab;\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading group details...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  if (!group) {\n    return <div className=\"error-message\">Group not found</div>;\n  }\n\n  const isModerator = userId => \n    moderators.some(moderator => moderator.id === userId);\n\n  return (\n    <div className=\"group-detail-container\">\n      <GroupNav />\n      \n      <div className=\"group-header\">\n        <div className=\"group-header-content\">\n          <h2>{group.name}</h2>\n          <p className=\"cuisine-type\">Cuisine: {group.cuisineType}</p>\n        </div>\n        \n        <div className=\"group-actions\">\n          {!userRole.isMember && (\n            <button className=\"join-btn\" onClick={handleJoinGroup}>\n              <FontAwesomeIcon icon={faUserPlus} /> Join Group\n            </button>\n          )}\n          \n          {userRole.isMember && !userRole.isAdmin && (\n            <button className=\"leave-btn\" onClick={handleLeaveGroup}>\n              <FontAwesomeIcon icon={faSignOutAlt} /> Leave Group\n            </button>\n          )}\n          \n          {userRole.isAdmin && (\n            <div className=\"admin-buttons\">\n              <button className=\"edit-btn\" onClick={() => navigate(`/groups/${groupId}/edit`)}>\n                <FontAwesomeIcon icon={faPenToSquare} /> Edit\n              </button>\n              <button className=\"transfer-btn\" onClick={handleTransferOwnership}>\n                <FontAwesomeIcon icon={faExchangeAlt} /> Transfer\n              </button>\n              <button className=\"delete-btn\" onClick={handleDeleteGroup}>\n                <FontAwesomeIcon icon={faTrashAlt} /> Delete\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"group-tabs\">\n        <button \n          className={`group-tab ${activeTab === 'about' ? 'active' : ''}`}\n          onClick={() => switchTab('about')}\n        >\n          About\n        </button>\n        {userRole.isMember && (\n          <button \n            className={`group-tab ${activeTab === 'messages' ? 'active' : ''}`}\n            onClick={() => switchTab('messages')}\n          >\n            Messages\n          </button>\n        )}\n      </div>\n      \n      {activeTab === 'about' && (\n        <>\n          <div className=\"group-description\">\n            <h3>About this Group</h3>\n            <p>{group.description}</p>\n          </div>\n          \n          <div className=\"group-members\">\n            <h3>Members ({members.length})</h3>\n            <ul className=\"members-list\">\n              {members.map(member => (\n                <li key={member.id} className=\"member-item\">\n                  <span className=\"member-name\">\n                    {member.name}\n                    {group.adminId === member.id && <span className=\"admin-badge\">Admin</span>}\n                    {isModerator(member.id) && <span className=\"moderator-badge\">Moderator</span>}\n                  </span>\n                  \n                  {/* Member actions for moderators and admin */}\n                  {(userRole.isAdmin || (userRole.isModerator && !isModerator(member.id) && group.adminId !== member.id)) && (\n                    <div className=\"member-actions\">\n                      {/* Remove member button */}\n                      {group.adminId !== member.id && member.id !== currentUserId && (\n                        <button \n                          className=\"remove-member-btn\"\n                          onClick={() => handleRemoveMember(member.id)}\n                          title=\"Remove member\"\n                        >\n                          Remove\n                        </button>\n                      )}\n                      \n                      {/* Moderator toggle button (admin only) */}\n                      {userRole.isAdmin && member.id !== currentUserId && (\n                        isModerator(member.id) ? (\n                          <button \n                            className=\"toggle-mod-btn\"\n                            onClick={() => handleRemoveModerator(member.id)}\n                            title=\"Remove moderator role\"\n                          >\n                            Remove Mod\n                          </button>\n                        ) : (\n                          <button \n                            className=\"toggle-mod-btn\"\n                            onClick={() => handleAddModerator(member.id)}\n                            title=\"Add moderator role\"\n                          >\n                            Make Mod\n                          </button>\n                        )\n                      )}\n                    </div>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </>\n      )}\n      \n      {activeTab === 'messages' && userRole.isMember && (\n        <GroupMessages groupId={groupId} userRole={userRole} />\n      )}\n    </div>\n  );\n};\n\nexport default GroupDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}