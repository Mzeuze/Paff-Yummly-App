{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lasit\\\\OneDrive\\\\Documents\\\\IDEs\\\\VS Code\\\\Paff-Yummly-App\\\\frontend\\\\src\\\\components\\\\GroupDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport GroupService from '../services/GroupService';\nimport Swal from 'sweetalert2';\nimport '../styles/GroupDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupDetail = () => {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const navigate = useNavigate();\n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState({\n    isMember: false,\n    isModerator: false,\n    isAdmin: false\n  });\n\n  // Mock user ID (would come from auth context in a real app)\n  const currentUserId = 1;\n  useEffect(() => {\n    loadGroupData();\n  }, [groupId]);\n  const loadGroupData = async () => {\n    setLoading(true);\n    try {\n      // Load group details\n      const groupResponse = await GroupService.getGroupById(groupId);\n      setGroup(groupResponse.data);\n\n      // Load members\n      const membersResponse = await GroupService.getGroupMembers(groupId);\n      setMembers(membersResponse.data);\n\n      // Load moderators\n      const moderatorsResponse = await GroupService.getGroupModerators(groupId);\n      setModerators(moderatorsResponse.data);\n\n      // Check user roles\n      const [isMemberRes, isModeratorRes, isAdminRes] = await Promise.all([GroupService.isMember(groupId, currentUserId), GroupService.isModerator(groupId, currentUserId), GroupService.isAdmin(groupId, currentUserId)]);\n      setUserRole({\n        isMember: isMemberRes.data,\n        isModerator: isModeratorRes.data,\n        isAdmin: isAdminRes.data\n      });\n      setError(null);\n    } catch (err) {\n      setError('Failed to load group details. Please try again later.');\n      console.error('Error loading group details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleJoinGroup = async () => {\n    try {\n      await GroupService.joinGroup(groupId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Joined Successfully',\n        text: 'You are now a member of this group'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Join',\n        text: 'There was an error joining the group'\n      });\n      console.error('Error joining group:', err);\n    }\n  };\n  const handleLeaveGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Leave Group?',\n        text: 'Are you sure you want to leave this group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Leave',\n        cancelButtonText: 'Cancel'\n      });\n      if (result.isConfirmed) {\n        await GroupService.leaveGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Left Successfully',\n          text: 'You have left the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Leave',\n        text: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'There was an error leaving the group'\n      });\n      console.error('Error leaving group:', err);\n    }\n  };\n  const handleDeleteGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Delete Group?',\n        text: 'This action cannot be undone. All group data will be permanently deleted.',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Delete',\n        cancelButtonText: 'Cancel',\n        confirmButtonColor: '#d33'\n      });\n      if (result.isConfirmed) {\n        await GroupService.deleteGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Group Deleted',\n          text: 'The group has been successfully deleted'\n        });\n        navigate('/groups'); // Redirect to groups list\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Delete',\n        text: 'There was an error deleting the group'\n      });\n      console.error('Error deleting group:', err);\n    }\n  };\n  const handleAddModerator = async userId => {\n    try {\n      await GroupService.addModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Added',\n        text: 'The user is now a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Add Moderator',\n        text: 'There was an error adding the moderator'\n      });\n      console.error('Error adding moderator:', err);\n    }\n  };\n  const handleRemoveModerator = async userId => {\n    try {\n      await GroupService.removeModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Removed',\n        text: 'The user is no longer a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Moderator',\n        text: 'There was an error removing the moderator'\n      });\n      console.error('Error removing moderator:', err);\n    }\n  };\n  const handleTransferOwnership = async () => {\n    try {\n      const {\n        value: newAdminId\n      } = await Swal.fire({\n        title: 'Transfer Ownership',\n        input: 'select',\n        inputOptions: Object.fromEntries(members.filter(member => member.id !== currentUserId).map(member => [member.id, member.name])),\n        inputPlaceholder: 'Select a new admin',\n        showCancelButton: true\n      });\n      if (newAdminId) {\n        await GroupService.transferOwnership(groupId, Number(newAdminId), currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Ownership Transferred',\n          text: 'Group ownership has been transferred successfully'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Transfer Ownership',\n        text: 'There was an error transferring ownership'\n      });\n      console.error('Error transferring ownership:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading group details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 12\n    }, this);\n  }\n  if (!group) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Group not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 12\n    }, this);\n  }\n  const isModerator = userId => moderators.some(moderator => moderator.id === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cuisine-type\",\n        children: [\"Cuisine: \", group.cuisineType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-actions\",\n      children: [!userRole.isMember && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join-btn\",\n        onClick: handleJoinGroup,\n        children: \"Join Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), userRole.isMember && !userRole.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leave-btn\",\n        onClick: handleLeaveGroup,\n        children: \"Leave Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), userRole.isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: () => navigate(`/groups/${groupId}/edit`),\n          children: \"Edit Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transfer-btn\",\n          onClick: handleTransferOwnership,\n          children: \"Transfer Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: handleDeleteGroup,\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: group.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-members\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Members (\", members.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members-list\",\n        children: members.map(member => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"member-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"member-name\",\n            children: member.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), member.id === group.adminId && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"admin-badge\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), isModerator(member.id) && member.id !== group.adminId && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"moderator-badge\",\n            children: \"Moderator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), userRole.isAdmin && member.id !== currentUserId && member.id !== group.adminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: !isModerator(member.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"make-moderator-btn\",\n              onClick: () => handleAddModerator(member.id),\n              children: \"Make Moderator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-moderator-btn\",\n              onClick: () => handleRemoveModerator(member.id),\n              children: \"Remove Moderator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 21\n            }, this)\n          }, void 0, false)]\n        }, member.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-discussions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Discussions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), userRole.isMember && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-discussion-btn\",\n        onClick: () => navigate(`/groups/${groupId}/discussions/create`),\n        children: \"Start New Discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"placeholder\",\n        children: \"Discussions feature coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetail, \"DcRLH3ivM7vi575hFNLox+eKvto=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GroupDetail;\nexport default GroupDetail;\nvar _c;\n$RefreshReg$(_c, \"GroupDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","GroupService","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupDetail","_s","groupId","navigate","group","setGroup","members","setMembers","moderators","setModerators","loading","setLoading","error","setError","userRole","setUserRole","isMember","isModerator","isAdmin","currentUserId","loadGroupData","groupResponse","getGroupById","data","membersResponse","getGroupMembers","moderatorsResponse","getGroupModerators","isMemberRes","isModeratorRes","isAdminRes","Promise","all","err","console","handleJoinGroup","joinGroup","fire","icon","title","text","handleLeaveGroup","result","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","leaveGroup","_err$response","_err$response$data","response","message","handleDeleteGroup","confirmButtonColor","deleteGroup","handleAddModerator","userId","addModerator","handleRemoveModerator","removeModerator","handleTransferOwnership","value","newAdminId","input","inputOptions","Object","fromEntries","filter","member","id","map","name","inputPlaceholder","transferOwnership","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","some","moderator","cuisineType","onClick","description","length","adminId","_c","$RefreshReg$"],"sources":["C:/Users/lasit/OneDrive/Documents/IDEs/VS Code/Paff-Yummly-App/frontend/src/components/GroupDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport GroupService from '../services/GroupService';\r\nimport Swal from 'sweetalert2';\r\nimport '../styles/GroupDetail.css';\r\n\r\nconst GroupDetail = () => {\r\n  const { groupId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [group, setGroup] = useState(null);\r\n  const [members, setMembers] = useState([]);\r\n  const [moderators, setModerators] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [userRole, setUserRole] = useState({\r\n    isMember: false,\r\n    isModerator: false,\r\n    isAdmin: false\r\n  });\r\n  \r\n  // Mock user ID (would come from auth context in a real app)\r\n  const currentUserId = 1;\r\n\r\n  useEffect(() => {\r\n    loadGroupData();\r\n  }, [groupId]);\r\n\r\n  const loadGroupData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Load group details\r\n      const groupResponse = await GroupService.getGroupById(groupId);\r\n      setGroup(groupResponse.data);\r\n      \r\n      // Load members\r\n      const membersResponse = await GroupService.getGroupMembers(groupId);\r\n      setMembers(membersResponse.data);\r\n      \r\n      // Load moderators\r\n      const moderatorsResponse = await GroupService.getGroupModerators(groupId);\r\n      setModerators(moderatorsResponse.data);\r\n      \r\n      // Check user roles\r\n      const [isMemberRes, isModeratorRes, isAdminRes] = await Promise.all([\r\n        GroupService.isMember(groupId, currentUserId),\r\n        GroupService.isModerator(groupId, currentUserId),\r\n        GroupService.isAdmin(groupId, currentUserId)\r\n      ]);\r\n      \r\n      setUserRole({\r\n        isMember: isMemberRes.data,\r\n        isModerator: isModeratorRes.data,\r\n        isAdmin: isAdminRes.data\r\n      });\r\n      \r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Failed to load group details. Please try again later.');\r\n      console.error('Error loading group details:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleJoinGroup = async () => {\r\n    try {\r\n      await GroupService.joinGroup(groupId, currentUserId);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Joined Successfully',\r\n        text: 'You are now a member of this group'\r\n      });\r\n      loadGroupData(); // Refresh data\r\n    } catch (err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to Join',\r\n        text: 'There was an error joining the group'\r\n      });\r\n      console.error('Error joining group:', err);\r\n    }\r\n  };\r\n\r\n  const handleLeaveGroup = async () => {\r\n    try {\r\n      const result = await Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Leave Group?',\r\n        text: 'Are you sure you want to leave this group?',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Leave',\r\n        cancelButtonText: 'Cancel'\r\n      });\r\n      \r\n      if (result.isConfirmed) {\r\n        await GroupService.leaveGroup(groupId, currentUserId);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Left Successfully',\r\n          text: 'You have left the group'\r\n        });\r\n        loadGroupData(); // Refresh data\r\n      }\r\n    } catch (err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to Leave',\r\n        text: err.response?.data?.message || 'There was an error leaving the group'\r\n      });\r\n      console.error('Error leaving group:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteGroup = async () => {\r\n    try {\r\n      const result = await Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Delete Group?',\r\n        text: 'This action cannot be undone. All group data will be permanently deleted.',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, Delete',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonColor: '#d33'\r\n      });\r\n      \r\n      if (result.isConfirmed) {\r\n        await GroupService.deleteGroup(groupId, currentUserId);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Group Deleted',\r\n          text: 'The group has been successfully deleted'\r\n        });\r\n        navigate('/groups'); // Redirect to groups list\r\n      }\r\n    } catch (err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to Delete',\r\n        text: 'There was an error deleting the group'\r\n      });\r\n      console.error('Error deleting group:', err);\r\n    }\r\n  };\r\n\r\n  const handleAddModerator = async (userId) => {\r\n    try {\r\n      await GroupService.addModerator(groupId, userId, currentUserId);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Moderator Added',\r\n        text: 'The user is now a moderator'\r\n      });\r\n      loadGroupData(); // Refresh data\r\n    } catch (err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to Add Moderator',\r\n        text: 'There was an error adding the moderator'\r\n      });\r\n      console.error('Error adding moderator:', err);\r\n    }\r\n  };\r\n\r\n  const handleRemoveModerator = async (userId) => {\r\n    try {\r\n      await GroupService.removeModerator(groupId, userId, currentUserId);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Moderator Removed',\r\n        text: 'The user is no longer a moderator'\r\n      });\r\n      loadGroupData(); // Refresh data\r\n    } catch (err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to Remove Moderator',\r\n        text: 'There was an error removing the moderator'\r\n      });\r\n      console.error('Error removing moderator:', err);\r\n    }\r\n  };\r\n\r\n  const handleTransferOwnership = async () => {\r\n    try {\r\n      const { value: newAdminId } = await Swal.fire({\r\n        title: 'Transfer Ownership',\r\n        input: 'select',\r\n        inputOptions: Object.fromEntries(\r\n          members\r\n            .filter(member => member.id !== currentUserId)\r\n            .map(member => [member.id, member.name])\r\n        ),\r\n        inputPlaceholder: 'Select a new admin',\r\n        showCancelButton: true\r\n      });\r\n      \r\n      if (newAdminId) {\r\n        await GroupService.transferOwnership(groupId, Number(newAdminId), currentUserId);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Ownership Transferred',\r\n          text: 'Group ownership has been transferred successfully'\r\n        });\r\n        loadGroupData(); // Refresh data\r\n      }\r\n    } catch (err) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Failed to Transfer Ownership',\r\n        text: 'There was an error transferring ownership'\r\n      });\r\n      console.error('Error transferring ownership:', err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading group details...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n\r\n  if (!group) {\r\n    return <div className=\"error-message\">Group not found</div>;\r\n  }\r\n\r\n  const isModerator = userId => \r\n    moderators.some(moderator => moderator.id === userId);\r\n\r\n  return (\r\n    <div className=\"group-detail-container\">\r\n      <div className=\"group-header\">\r\n        <h2>{group.name}</h2>\r\n        <p className=\"cuisine-type\">Cuisine: {group.cuisineType}</p>\r\n      </div>\r\n      \r\n      <div className=\"group-actions\">\r\n        {!userRole.isMember && (\r\n          <button className=\"join-btn\" onClick={handleJoinGroup}>Join Group</button>\r\n        )}\r\n        \r\n        {userRole.isMember && !userRole.isAdmin && (\r\n          <button className=\"leave-btn\" onClick={handleLeaveGroup}>Leave Group</button>\r\n        )}\r\n        \r\n        {userRole.isAdmin && (\r\n          <>\r\n            <button className=\"edit-btn\" onClick={() => navigate(`/groups/${groupId}/edit`)}>\r\n              Edit Group\r\n            </button>\r\n            <button className=\"transfer-btn\" onClick={handleTransferOwnership}>\r\n              Transfer Ownership\r\n            </button>\r\n            <button className=\"delete-btn\" onClick={handleDeleteGroup}>\r\n              Delete Group\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"group-description\">\r\n        <h3>About</h3>\r\n        <p>{group.description}</p>\r\n      </div>\r\n      \r\n      <div className=\"group-members\">\r\n        <h3>Members ({members.length})</h3>\r\n        <div className=\"members-list\">\r\n          {members.map(member => (\r\n            <div key={member.id} className=\"member-card\">\r\n              <span className=\"member-name\">{member.name}</span>\r\n              {member.id === group.adminId && (\r\n                <span className=\"admin-badge\">Admin</span>\r\n              )}\r\n              {isModerator(member.id) && member.id !== group.adminId && (\r\n                <span className=\"moderator-badge\">Moderator</span>\r\n              )}\r\n              \r\n              {userRole.isAdmin && member.id !== currentUserId && member.id !== group.adminId && (\r\n                <>\r\n                  {!isModerator(member.id) ? (\r\n                    <button \r\n                      className=\"make-moderator-btn\"\r\n                      onClick={() => handleAddModerator(member.id)}\r\n                    >\r\n                      Make Moderator\r\n                    </button>\r\n                  ) : (\r\n                    <button \r\n                      className=\"remove-moderator-btn\"\r\n                      onClick={() => handleRemoveModerator(member.id)}\r\n                    >\r\n                      Remove Moderator\r\n                    </button>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"group-discussions\">\r\n        <h3>Discussions</h3>\r\n        {userRole.isMember && (\r\n          <button \r\n            className=\"new-discussion-btn\"\r\n            onClick={() => navigate(`/groups/${groupId}/discussions/create`)}\r\n          >\r\n            Start New Discussion\r\n          </button>\r\n        )}\r\n        {/* Discussion list would go here */}\r\n        <p className=\"placeholder\">Discussions feature coming soon...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}