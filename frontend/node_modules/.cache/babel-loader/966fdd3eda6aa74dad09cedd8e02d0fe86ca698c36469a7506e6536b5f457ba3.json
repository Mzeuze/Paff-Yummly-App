{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/recipes';\nclass RecipeService {\n  // Get all recipes\n  getAllRecipes() {\n    return axios.get(API_URL);\n  }\n\n  // Get recipe by ID\n  getRecipeById(recipeId) {\n    return axios.get(`${API_URL}/${recipeId}`);\n  }\n\n  // Get recipes by user\n  getRecipesByUser(userId) {\n    return axios.get(`${API_URL}/user`, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Create new recipe\n  createRecipe(recipeData, userId) {\n    // Make sure userId is properly formatted as a number\n    const numericUserId = Number(userId);\n\n    // Use a proper Content-Type header\n    return axios.post(API_URL, recipeData, {\n      headers: {\n        'userid': numericUserId,\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // Update recipe\n  updateRecipe(recipeId, recipeData, userId) {\n    return axios.put(`${API_URL}/${recipeId}`, recipeData, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Delete recipe\n  deleteRecipe(recipeId, userId) {\n    return axios.delete(`${API_URL}/${recipeId}`, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Search recipes\n  searchRecipes(query) {\n    return axios.get(`${API_URL}/search?query=${query}`);\n  }\n\n  // Filter recipes\n  filterRecipes(cuisine, dietary, ingredient) {\n    let url = `${API_URL}/filter?`;\n    if (cuisine) url += `cuisine=${cuisine}&`;\n    if (dietary) url += `dietary=${dietary}&`;\n    if (ingredient) url += `ingredient=${ingredient}&`;\n    return axios.get(url);\n  }\n\n  // Add comment to recipe\n  addComment(recipeId, comment, userId) {\n    return axios.post(`${API_URL}/${recipeId}/comments`, comment, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Get comments for a recipe\n  getRecipeComments(recipeId) {\n    return axios.get(`${API_URL}/${recipeId}/comments`);\n  }\n}\nexport default new RecipeService();","map":{"version":3,"names":["axios","API_URL","RecipeService","getAllRecipes","get","getRecipeById","recipeId","getRecipesByUser","userId","headers","createRecipe","recipeData","numericUserId","Number","post","updateRecipe","put","deleteRecipe","delete","searchRecipes","query","filterRecipes","cuisine","dietary","ingredient","url","addComment","comment","getRecipeComments"],"sources":["C:/Users/lasit/OneDrive/Documents/IDEs/VS Code/Paff-Yummly-App/frontend/src/services/RecipeService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/recipes';\r\n\r\nclass RecipeService {\r\n    // Get all recipes\r\n    getAllRecipes() {\r\n        return axios.get(API_URL);\r\n    }\r\n    \r\n    // Get recipe by ID\r\n    getRecipeById(recipeId) {\r\n        return axios.get(`${API_URL}/${recipeId}`);\r\n    }\r\n    \r\n    // Get recipes by user\r\n    getRecipesByUser(userId) {\r\n        return axios.get(`${API_URL}/user`, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Create new recipe\r\n    createRecipe(recipeData, userId) {\r\n        // Make sure userId is properly formatted as a number\r\n        const numericUserId = Number(userId);\r\n        \r\n        // Use a proper Content-Type header\r\n        return axios.post(API_URL, recipeData, {\r\n            headers: { \r\n                'userid': numericUserId,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n    \r\n    // Update recipe\r\n    updateRecipe(recipeId, recipeData, userId) {\r\n        return axios.put(`${API_URL}/${recipeId}`, recipeData, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Delete recipe\r\n    deleteRecipe(recipeId, userId) {\r\n        return axios.delete(`${API_URL}/${recipeId}`, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Search recipes\r\n    searchRecipes(query) {\r\n        return axios.get(`${API_URL}/search?query=${query}`);\r\n    }\r\n    \r\n    // Filter recipes\r\n    filterRecipes(cuisine, dietary, ingredient) {\r\n        let url = `${API_URL}/filter?`;\r\n        if (cuisine) url += `cuisine=${cuisine}&`;\r\n        if (dietary) url += `dietary=${dietary}&`;\r\n        if (ingredient) url += `ingredient=${ingredient}&`;\r\n        return axios.get(url);\r\n    }\r\n    \r\n    // Add comment to recipe\r\n    addComment(recipeId, comment, userId) {\r\n        return axios.post(`${API_URL}/${recipeId}/comments`, comment, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Get comments for a recipe\r\n    getRecipeComments(recipeId) {\r\n        return axios.get(`${API_URL}/${recipeId}/comments`);\r\n    }\r\n}\r\n\r\nexport default new RecipeService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc;AAE9B,MAAMC,aAAa,CAAC;EAChB;EACAC,aAAaA,CAAA,EAAG;IACZ,OAAOH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EAC7B;;EAEA;EACAI,aAAaA,CAACC,QAAQ,EAAE;IACpB,OAAON,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIK,QAAQ,EAAE,CAAC;EAC9C;;EAEA;EACAC,gBAAgBA,CAACC,MAAM,EAAE;IACrB,OAAOR,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,OAAO,EAAE;MAChCQ,OAAO,EAAE;QAAE,QAAQ,EAAED;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAE,YAAYA,CAACC,UAAU,EAAEH,MAAM,EAAE;IAC7B;IACA,MAAMI,aAAa,GAAGC,MAAM,CAACL,MAAM,CAAC;;IAEpC;IACA,OAAOR,KAAK,CAACc,IAAI,CAACb,OAAO,EAAEU,UAAU,EAAE;MACnCF,OAAO,EAAE;QACL,QAAQ,EAAEG,aAAa;QACvB,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;EACN;;EAEA;EACAG,YAAYA,CAACT,QAAQ,EAAEK,UAAU,EAAEH,MAAM,EAAE;IACvC,OAAOR,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,IAAIK,QAAQ,EAAE,EAAEK,UAAU,EAAE;MACnDF,OAAO,EAAE;QAAE,QAAQ,EAAED;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAS,YAAYA,CAACX,QAAQ,EAAEE,MAAM,EAAE;IAC3B,OAAOR,KAAK,CAACkB,MAAM,CAAC,GAAGjB,OAAO,IAAIK,QAAQ,EAAE,EAAE;MAC1CG,OAAO,EAAE;QAAE,QAAQ,EAAED;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAW,aAAaA,CAACC,KAAK,EAAE;IACjB,OAAOpB,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,iBAAiBmB,KAAK,EAAE,CAAC;EACxD;;EAEA;EACAC,aAAaA,CAACC,OAAO,EAAEC,OAAO,EAAEC,UAAU,EAAE;IACxC,IAAIC,GAAG,GAAG,GAAGxB,OAAO,UAAU;IAC9B,IAAIqB,OAAO,EAAEG,GAAG,IAAI,WAAWH,OAAO,GAAG;IACzC,IAAIC,OAAO,EAAEE,GAAG,IAAI,WAAWF,OAAO,GAAG;IACzC,IAAIC,UAAU,EAAEC,GAAG,IAAI,cAAcD,UAAU,GAAG;IAClD,OAAOxB,KAAK,CAACI,GAAG,CAACqB,GAAG,CAAC;EACzB;;EAEA;EACAC,UAAUA,CAACpB,QAAQ,EAAEqB,OAAO,EAAEnB,MAAM,EAAE;IAClC,OAAOR,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,IAAIK,QAAQ,WAAW,EAAEqB,OAAO,EAAE;MAC1DlB,OAAO,EAAE;QAAE,QAAQ,EAAED;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAoB,iBAAiBA,CAACtB,QAAQ,EAAE;IACxB,OAAON,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIK,QAAQ,WAAW,CAAC;EACvD;AACJ;AAEA,eAAe,IAAIJ,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}