{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/recipes';\nclass RecipeService {\n  // Get all recipes\n  getAllRecipes() {\n    return axios.get(API_URL);\n  }\n\n  // Get latest recipes\n  getLatestRecipes() {\n    return axios.get(`${API_URL}/latest`);\n  }\n\n  // Get recipe by ID\n  getRecipeById(id) {\n    return axios.get(`${API_URL}/${id}`);\n  }\n\n  // Create new recipe\n  createRecipe(recipeData, userId) {\n    return axios.post(API_URL, recipeData, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Update recipe\n  updateRecipe(id, recipeData, userId) {\n    return axios.put(`${API_URL}/${id}`, recipeData, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Delete recipe\n  deleteRecipe(id, userId) {\n    return axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Get recipes by user\n  getRecipesByUser(userId) {\n    return axios.get(`${API_URL}/user/${userId}`);\n  }\n\n  // Search recipes\n  searchRecipes(params) {\n    return axios.get(`${API_URL}/search`, {\n      params\n    });\n  }\n\n  // Add comment to recipe\n  addComment(recipeId, commentData, userId) {\n    return axios.post(`${API_URL}/${recipeId}/comments`, commentData, {\n      headers: {\n        'userid': userId\n      }\n    });\n  }\n\n  // Get comments for recipe\n  getComments(recipeId) {\n    return axios.get(`${API_URL}/${recipeId}/comments`);\n  }\n}\nexport default new RecipeService();","map":{"version":3,"names":["axios","API_URL","RecipeService","getAllRecipes","get","getLatestRecipes","getRecipeById","id","createRecipe","recipeData","userId","post","headers","updateRecipe","put","deleteRecipe","delete","getRecipesByUser","searchRecipes","params","addComment","recipeId","commentData","getComments"],"sources":["C:/Users/lasit/OneDrive/Documents/IDEs/VS Code/Paff-Yummly-App/frontend/src/services/RecipeService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/recipes';\r\n\r\nclass RecipeService {\r\n    // Get all recipes\r\n    getAllRecipes() {\r\n        return axios.get(API_URL);\r\n    }\r\n    \r\n    // Get latest recipes\r\n    getLatestRecipes() {\r\n        return axios.get(`${API_URL}/latest`);\r\n    }\r\n    \r\n    // Get recipe by ID\r\n    getRecipeById(id) {\r\n        return axios.get(`${API_URL}/${id}`);\r\n    }\r\n    \r\n    // Create new recipe\r\n    createRecipe(recipeData, userId) {\r\n        return axios.post(API_URL, recipeData, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Update recipe\r\n    updateRecipe(id, recipeData, userId) {\r\n        return axios.put(`${API_URL}/${id}`, recipeData, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Delete recipe\r\n    deleteRecipe(id, userId) {\r\n        return axios.delete(`${API_URL}/${id}`, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Get recipes by user\r\n    getRecipesByUser(userId) {\r\n        return axios.get(`${API_URL}/user/${userId}`);\r\n    }\r\n    \r\n    // Search recipes\r\n    searchRecipes(params) {\r\n        return axios.get(`${API_URL}/search`, { params });\r\n    }\r\n    \r\n    // Add comment to recipe\r\n    addComment(recipeId, commentData, userId) {\r\n        return axios.post(`${API_URL}/${recipeId}/comments`, commentData, {\r\n            headers: { 'userid': userId }\r\n        });\r\n    }\r\n    \r\n    // Get comments for recipe\r\n    getComments(recipeId) {\r\n        return axios.get(`${API_URL}/${recipeId}/comments`);\r\n    }\r\n}\r\n\r\nexport default new RecipeService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc;AAE9B,MAAMC,aAAa,CAAC;EAChB;EACAC,aAAaA,CAAA,EAAG;IACZ,OAAOH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EAC7B;;EAEA;EACAI,gBAAgBA,CAAA,EAAG;IACf,OAAOL,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAAS,CAAC;EACzC;;EAEA;EACAK,aAAaA,CAACC,EAAE,EAAE;IACd,OAAOP,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIM,EAAE,EAAE,CAAC;EACxC;;EAEA;EACAC,YAAYA,CAACC,UAAU,EAAEC,MAAM,EAAE;IAC7B,OAAOV,KAAK,CAACW,IAAI,CAACV,OAAO,EAAEQ,UAAU,EAAE;MACnCG,OAAO,EAAE;QAAE,QAAQ,EAAEF;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAG,YAAYA,CAACN,EAAE,EAAEE,UAAU,EAAEC,MAAM,EAAE;IACjC,OAAOV,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,IAAIM,EAAE,EAAE,EAAEE,UAAU,EAAE;MAC7CG,OAAO,EAAE;QAAE,QAAQ,EAAEF;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAK,YAAYA,CAACR,EAAE,EAAEG,MAAM,EAAE;IACrB,OAAOV,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,IAAIM,EAAE,EAAE,EAAE;MACpCK,OAAO,EAAE;QAAE,QAAQ,EAAEF;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAO,gBAAgBA,CAACP,MAAM,EAAE;IACrB,OAAOV,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAASS,MAAM,EAAE,CAAC;EACjD;;EAEA;EACAQ,aAAaA,CAACC,MAAM,EAAE;IAClB,OAAOnB,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAAS,EAAE;MAAEkB;IAAO,CAAC,CAAC;EACrD;;EAEA;EACAC,UAAUA,CAACC,QAAQ,EAAEC,WAAW,EAAEZ,MAAM,EAAE;IACtC,OAAOV,KAAK,CAACW,IAAI,CAAC,GAAGV,OAAO,IAAIoB,QAAQ,WAAW,EAAEC,WAAW,EAAE;MAC9DV,OAAO,EAAE;QAAE,QAAQ,EAAEF;MAAO;IAChC,CAAC,CAAC;EACN;;EAEA;EACAa,WAAWA,CAACF,QAAQ,EAAE;IAClB,OAAOrB,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIoB,QAAQ,WAAW,CAAC;EACvD;AACJ;AAEA,eAAe,IAAInB,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}