{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lasit\\\\OneDrive\\\\Documents\\\\IDEs\\\\VS Code\\\\Paff-Yummly-App\\\\frontend\\\\src\\\\components\\\\GroupDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport GroupService from '../services/GroupService';\nimport GroupMessages from './GroupMessages';\nimport GroupNav from './GroupNav';\nimport Swal from 'sweetalert2';\nimport '../styles/GroupDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GroupDetail = () => {\n  _s();\n  const {\n    groupId\n  } = useParams();\n  const navigate = useNavigate();\n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState({\n    isMember: false,\n    isModerator: false,\n    isAdmin: false\n  });\n\n  // Mock user ID (would come from auth context in a real app)\n  const currentUserId = 1;\n  useEffect(() => {\n    loadGroupData();\n  }, [groupId]);\n  const loadGroupData = async () => {\n    setLoading(true);\n    try {\n      // Load group details\n      const groupResponse = await GroupService.getGroupById(groupId);\n      setGroup(groupResponse.data);\n\n      // Load members\n      const membersResponse = await GroupService.getGroupMembers(groupId);\n      setMembers(membersResponse.data);\n\n      // Load moderators\n      const moderatorsResponse = await GroupService.getGroupModerators(groupId);\n      setModerators(moderatorsResponse.data);\n\n      // Check user roles\n      const [isMemberRes, isModeratorRes, isAdminRes] = await Promise.all([GroupService.isMember(groupId, currentUserId), GroupService.isModerator(groupId, currentUserId), GroupService.isAdmin(groupId, currentUserId)]);\n      setUserRole({\n        isMember: isMemberRes.data,\n        isModerator: isModeratorRes.data,\n        isAdmin: isAdminRes.data\n      });\n      setError(null);\n    } catch (err) {\n      setError('Failed to load group details. Please try again later.');\n      console.error('Error loading group details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleJoinGroup = async () => {\n    try {\n      await GroupService.joinGroup(groupId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Joined Successfully',\n        text: 'You are now a member of this group'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Join',\n        text: 'There was an error joining the group'\n      });\n      console.error('Error joining group:', err);\n    }\n  };\n  const handleLeaveGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Leave Group?',\n        text: 'Are you sure you want to leave this group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Leave',\n        cancelButtonText: 'Cancel'\n      });\n      if (result.isConfirmed) {\n        await GroupService.leaveGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Left Successfully',\n          text: 'You have left the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Leave',\n        text: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'There was an error leaving the group'\n      });\n      console.error('Error leaving group:', err);\n    }\n  };\n  const handleDeleteGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Delete Group?',\n        text: 'This action cannot be undone. All group data will be permanently deleted.',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Delete',\n        cancelButtonText: 'Cancel',\n        confirmButtonColor: '#d33'\n      });\n      if (result.isConfirmed) {\n        await GroupService.deleteGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Group Deleted',\n          text: 'The group has been successfully deleted'\n        });\n        navigate('/groups'); // Redirect to groups list\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Delete',\n        text: 'There was an error deleting the group'\n      });\n      console.error('Error deleting group:', err);\n    }\n  };\n  const handleAddModerator = async userId => {\n    try {\n      await GroupService.addModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Added',\n        text: 'The user is now a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Add Moderator',\n        text: 'There was an error adding the moderator'\n      });\n      console.error('Error adding moderator:', err);\n    }\n  };\n  const handleRemoveModerator = async userId => {\n    try {\n      await GroupService.removeModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Removed',\n        text: 'The user is no longer a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Moderator',\n        text: 'There was an error removing the moderator'\n      });\n      console.error('Error removing moderator:', err);\n    }\n  };\n  const handleTransferOwnership = async () => {\n    try {\n      const {\n        value: newAdminId\n      } = await Swal.fire({\n        title: 'Transfer Ownership',\n        input: 'select',\n        inputOptions: Object.fromEntries(members.filter(member => member.id !== currentUserId).map(member => [member.id, member.name])),\n        inputPlaceholder: 'Select a new admin',\n        showCancelButton: true\n      });\n      if (newAdminId) {\n        await GroupService.transferOwnership(groupId, Number(newAdminId), currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Ownership Transferred',\n          text: 'Group ownership has been transferred successfully'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Transfer Ownership',\n        text: 'There was an error transferring ownership'\n      });\n      console.error('Error transferring ownership:', err);\n    }\n  };\n  const handleRemoveMember = async userId => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Remove Member?',\n        text: 'Are you sure you want to remove this member from the group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Remove',\n        cancelButtonText: 'Cancel'\n      });\n      if (result.isConfirmed) {\n        await GroupService.removeMember(groupId, userId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Member Removed',\n          text: 'The member has been removed from the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Member',\n        text: 'There was an error removing the member'\n      });\n      console.error('Error removing member:', err);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading group details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 12\n    }, this);\n  }\n  if (!group) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: \"Group not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 12\n    }, this);\n  }\n  const isModerator = userId => moderators.some(moderator => moderator.id === userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(GroupNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cuisine-type\",\n        children: [\"Cuisine: \", group.cuisineType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-actions\",\n      children: [!userRole.isMember && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join-btn\",\n        onClick: handleJoinGroup,\n        children: \"Join Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), userRole.isMember && !userRole.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leave-btn\",\n        onClick: handleLeaveGroup,\n        children: \"Leave Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), userRole.isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-btn\",\n          onClick: () => navigate(`/groups/${groupId}/edit`),\n          children: \"Edit Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"transfer-btn\",\n          onClick: handleTransferOwnership,\n          children: \"Transfer Ownership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          onClick: handleDeleteGroup,\n          children: \"Delete Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"About this Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: group.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), userRole.isMember && /*#__PURE__*/_jsxDEV(GroupMessages, {\n      groupId: groupId,\n      userRole: userRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-members\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Members (\", members.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"members-list\",\n        children: members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"member-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"member-name\",\n            children: [member.name, group.adminId === member.id && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"admin-badge\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 49\n            }, this), isModerator(member.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"moderator-badge\",\n              children: \"Moderator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), (userRole.isAdmin || userRole.isModerator && !isModerator(member.id) && group.adminId !== member.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"member-actions\",\n            children: [group.adminId !== member.id && member.id !== currentUserId && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-member-btn\",\n              onClick: () => handleRemoveMember(member.id),\n              title: \"Remove member\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 21\n            }, this), userRole.isAdmin && member.id !== currentUserId && (isModerator(member.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-mod-btn\",\n              onClick: () => handleRemoveModerator(member.id),\n              title: \"Remove moderator role\",\n              children: \"Remove Mod\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-mod-btn\",\n              onClick: () => handleAddModerator(member.id),\n              title: \"Add moderator role\",\n              children: \"Make Mod\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this)]\n        }, member.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-discussions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Discussions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), userRole.isMember && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-discussion-btn\",\n        onClick: () => navigate(`/groups/${groupId}/discussions/create`),\n        children: \"Start New Discussion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"placeholder\",\n        children: \"Discussions feature coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupDetail, \"eLukpAGU61Q0vL5rMZAuGsUcIXY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GroupDetail;\nexport default GroupDetail;\nvar _c;\n$RefreshReg$(_c, \"GroupDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","GroupService","GroupMessages","GroupNav","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","GroupDetail","_s","groupId","navigate","group","setGroup","members","setMembers","moderators","setModerators","loading","setLoading","error","setError","userRole","setUserRole","isMember","isModerator","isAdmin","currentUserId","loadGroupData","groupResponse","getGroupById","data","membersResponse","getGroupMembers","moderatorsResponse","getGroupModerators","isMemberRes","isModeratorRes","isAdminRes","Promise","all","err","console","handleJoinGroup","joinGroup","fire","icon","title","text","handleLeaveGroup","result","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","leaveGroup","_err$response","_err$response$data","response","message","handleDeleteGroup","confirmButtonColor","deleteGroup","handleAddModerator","userId","addModerator","handleRemoveModerator","removeModerator","handleTransferOwnership","value","newAdminId","input","inputOptions","Object","fromEntries","filter","member","id","map","name","inputPlaceholder","transferOwnership","Number","handleRemoveMember","removeMember","className","children","fileName","_jsxFileName","lineNumber","columnNumber","some","moderator","cuisineType","onClick","description","length","adminId","_c","$RefreshReg$"],"sources":["C:/Users/lasit/OneDrive/Documents/IDEs/VS Code/Paff-Yummly-App/frontend/src/components/GroupDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport GroupService from '../services/GroupService';\nimport GroupMessages from './GroupMessages';\nimport GroupNav from './GroupNav';\nimport Swal from 'sweetalert2';\nimport '../styles/GroupDetail.css';\n\nconst GroupDetail = () => {\n  const { groupId } = useParams();\n  const navigate = useNavigate();\n  const [group, setGroup] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [moderators, setModerators] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userRole, setUserRole] = useState({\n    isMember: false,\n    isModerator: false,\n    isAdmin: false\n  });\n  \n  // Mock user ID (would come from auth context in a real app)\n  const currentUserId = 1;\n\n  useEffect(() => {\n    loadGroupData();\n  }, [groupId]);\n\n  const loadGroupData = async () => {\n    setLoading(true);\n    try {\n      // Load group details\n      const groupResponse = await GroupService.getGroupById(groupId);\n      setGroup(groupResponse.data);\n      \n      // Load members\n      const membersResponse = await GroupService.getGroupMembers(groupId);\n      setMembers(membersResponse.data);\n      \n      // Load moderators\n      const moderatorsResponse = await GroupService.getGroupModerators(groupId);\n      setModerators(moderatorsResponse.data);\n      \n      // Check user roles\n      const [isMemberRes, isModeratorRes, isAdminRes] = await Promise.all([\n        GroupService.isMember(groupId, currentUserId),\n        GroupService.isModerator(groupId, currentUserId),\n        GroupService.isAdmin(groupId, currentUserId)\n      ]);\n      \n      setUserRole({\n        isMember: isMemberRes.data,\n        isModerator: isModeratorRes.data,\n        isAdmin: isAdminRes.data\n      });\n      \n      setError(null);\n    } catch (err) {\n      setError('Failed to load group details. Please try again later.');\n      console.error('Error loading group details:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleJoinGroup = async () => {\n    try {\n      await GroupService.joinGroup(groupId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Joined Successfully',\n        text: 'You are now a member of this group'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Join',\n        text: 'There was an error joining the group'\n      });\n      console.error('Error joining group:', err);\n    }\n  };\n\n  const handleLeaveGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Leave Group?',\n        text: 'Are you sure you want to leave this group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Leave',\n        cancelButtonText: 'Cancel'\n      });\n      \n      if (result.isConfirmed) {\n        await GroupService.leaveGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Left Successfully',\n          text: 'You have left the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Leave',\n        text: err.response?.data?.message || 'There was an error leaving the group'\n      });\n      console.error('Error leaving group:', err);\n    }\n  };\n\n  const handleDeleteGroup = async () => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Delete Group?',\n        text: 'This action cannot be undone. All group data will be permanently deleted.',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Delete',\n        cancelButtonText: 'Cancel',\n        confirmButtonColor: '#d33'\n      });\n      \n      if (result.isConfirmed) {\n        await GroupService.deleteGroup(groupId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Group Deleted',\n          text: 'The group has been successfully deleted'\n        });\n        navigate('/groups'); // Redirect to groups list\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Delete',\n        text: 'There was an error deleting the group'\n      });\n      console.error('Error deleting group:', err);\n    }\n  };\n\n  const handleAddModerator = async (userId) => {\n    try {\n      await GroupService.addModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Added',\n        text: 'The user is now a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Add Moderator',\n        text: 'There was an error adding the moderator'\n      });\n      console.error('Error adding moderator:', err);\n    }\n  };\n\n  const handleRemoveModerator = async (userId) => {\n    try {\n      await GroupService.removeModerator(groupId, userId, currentUserId);\n      Swal.fire({\n        icon: 'success',\n        title: 'Moderator Removed',\n        text: 'The user is no longer a moderator'\n      });\n      loadGroupData(); // Refresh data\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Moderator',\n        text: 'There was an error removing the moderator'\n      });\n      console.error('Error removing moderator:', err);\n    }\n  };\n\n  const handleTransferOwnership = async () => {\n    try {\n      const { value: newAdminId } = await Swal.fire({\n        title: 'Transfer Ownership',\n        input: 'select',\n        inputOptions: Object.fromEntries(\n          members\n            .filter(member => member.id !== currentUserId)\n            .map(member => [member.id, member.name])\n        ),\n        inputPlaceholder: 'Select a new admin',\n        showCancelButton: true\n      });\n      \n      if (newAdminId) {\n        await GroupService.transferOwnership(groupId, Number(newAdminId), currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Ownership Transferred',\n          text: 'Group ownership has been transferred successfully'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Transfer Ownership',\n        text: 'There was an error transferring ownership'\n      });\n      console.error('Error transferring ownership:', err);\n    }\n  };\n\n  const handleRemoveMember = async (userId) => {\n    try {\n      const result = await Swal.fire({\n        icon: 'warning',\n        title: 'Remove Member?',\n        text: 'Are you sure you want to remove this member from the group?',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, Remove',\n        cancelButtonText: 'Cancel'\n      });\n      \n      if (result.isConfirmed) {\n        await GroupService.removeMember(groupId, userId, currentUserId);\n        Swal.fire({\n          icon: 'success',\n          title: 'Member Removed',\n          text: 'The member has been removed from the group'\n        });\n        loadGroupData(); // Refresh data\n      }\n    } catch (err) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Remove Member',\n        text: 'There was an error removing the member'\n      });\n      console.error('Error removing member:', err);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading group details...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  if (!group) {\n    return <div className=\"error-message\">Group not found</div>;\n  }\n\n  const isModerator = userId => \n    moderators.some(moderator => moderator.id === userId);\n\n  return (\n    <div className=\"group-detail-container\">\n      <GroupNav />\n      \n      <div className=\"group-header\">\n        <h2>{group.name}</h2>\n        <p className=\"cuisine-type\">Cuisine: {group.cuisineType}</p>\n      </div>\n      \n      <div className=\"group-actions\">\n        {!userRole.isMember && (\n          <button className=\"join-btn\" onClick={handleJoinGroup}>Join Group</button>\n        )}\n        \n        {userRole.isMember && !userRole.isAdmin && (\n          <button className=\"leave-btn\" onClick={handleLeaveGroup}>Leave Group</button>\n        )}\n        \n        {userRole.isAdmin && (\n          <>\n            <button className=\"edit-btn\" onClick={() => navigate(`/groups/${groupId}/edit`)}>\n              Edit Group\n            </button>\n            <button className=\"transfer-btn\" onClick={handleTransferOwnership}>\n              Transfer Ownership\n            </button>\n            <button className=\"delete-btn\" onClick={handleDeleteGroup}>\n              Delete Group\n            </button>\n          </>\n        )}\n      </div>\n      \n      <div className=\"group-description\">\n        <h3>About this Group</h3>\n        <p>{group.description}</p>\n      </div>\n      \n      {userRole.isMember && (\n        <GroupMessages groupId={groupId} userRole={userRole} />\n      )}\n      \n      <div className=\"group-members\">\n        <h3>Members ({members.length})</h3>\n        <ul className=\"members-list\">\n          {members.map(member => (\n            <li key={member.id} className=\"member-item\">\n              <span className=\"member-name\">\n                {member.name}\n                {group.adminId === member.id && <span className=\"admin-badge\">Admin</span>}\n                {isModerator(member.id) && <span className=\"moderator-badge\">Moderator</span>}\n              </span>\n              \n              {/* Member actions for moderators and admin */}\n              {(userRole.isAdmin || (userRole.isModerator && !isModerator(member.id) && group.adminId !== member.id)) && (\n                <div className=\"member-actions\">\n                  {/* Remove member button */}\n                  {group.adminId !== member.id && member.id !== currentUserId && (\n                    <button \n                      className=\"remove-member-btn\"\n                      onClick={() => handleRemoveMember(member.id)}\n                      title=\"Remove member\"\n                    >\n                      Remove\n                    </button>\n                  )}\n                  \n                  {/* Moderator toggle button (admin only) */}\n                  {userRole.isAdmin && member.id !== currentUserId && (\n                    isModerator(member.id) ? (\n                      <button \n                        className=\"toggle-mod-btn\"\n                        onClick={() => handleRemoveModerator(member.id)}\n                        title=\"Remove moderator role\"\n                      >\n                        Remove Mod\n                      </button>\n                    ) : (\n                      <button \n                        className=\"toggle-mod-btn\"\n                        onClick={() => handleAddModerator(member.id)}\n                        title=\"Add moderator role\"\n                      >\n                        Make Mod\n                      </button>\n                    )\n                  )}\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n      \n      <div className=\"group-discussions\">\n        <h3>Discussions</h3>\n        {userRole.isMember && (\n          <button \n            className=\"new-discussion-btn\"\n            onClick={() => navigate(`/groups/${groupId}/discussions/create`)}\n          >\n            Start New Discussion\n          </button>\n        )}\n        {/* Discussion list would go here */}\n        <p className=\"placeholder\">Discussions feature coming soon...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupDetail; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}